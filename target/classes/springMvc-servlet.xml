<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--使用注解实现ioc-->
    <!--指定扫描路径，路径下的所有对象纳入spring管理-->
    <context:component-scan base-package="com.smbms"/>
    <!--使用注解实现aop-->
    <!--启动对spring Aop的AspectJ注解的支持-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--支持其他注解-->
    <context:annotation-config></context:annotation-config>
    <!--加载数据库配置文件-->
    <context:property-placeholder location="classpath*:database.properties"/>
    <!-- 配置数据源-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="filters" value="stat" />
        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />

        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="20" />

        <property name="asyncInit" value="true" />

    </bean>

    <!--配置mybatis配置项-->
    <bean class="org.apache.ibatis.session.Configuration" id="setting">
        <!--开启驼峰命名法-->
        <property name="mapUnderscoreToCamelCase" value="true"/>
        <property name="logImpl" value="org.apache.ibatis.logging.log4j2.Log4j2Impl"/>
        <property name="autoMappingBehavior" value="FULL"/>
    </bean>

    <!--spring和mybatis之间的桥梁-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="configLocation" value="mybatisConfig.xml"/>-->
        <!--引入mybatis文件-->
        <property name="configuration" ref="setting"/>
        <!--引入datasource配置源-->
        <property name="dataSource" ref="datasource"/>
        <!--指定mybatis映射文件-->
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/smbms/mapperxml/*.xml</value>
            </list>
        </property>
        <!--配置别名-->
        <property name="typeAliasesPackage" value="com.smbms.pojo"/>
    </bean>

    <!--通过引入MapperScannerConfigurer接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--引入sqlsessionfactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定扫描路径-->
        <property name="basePackage" value="com.smbms.mapper"/>
    </bean>

    <!--声明事务管理开始-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--指定使用事务数据源-->
        <property name="dataSource" ref="datasource"/>
    </bean>

    <!--使用注解方式配置事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--sring-mvc配置项-->
    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!--使用注解实现配置处理器映射HandlerMapping-->
    <mvc:annotation-driven/>

    <!--配置文件上传处理器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--指定上传文件大小-->
        <property name="maxInMemorySize" value="500000"/>
        <!--指点上传文件编码-->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--配置静态资源-->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!--配置全局异常处理-->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.RuntimeException">error</prop>
            </props>
        </property>
    </bean>

    <!--配置文本编码处理器-->
    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="defaultCharset" value="UTF-8"/>
        <property name="supportedMediaTypes" value="application/json"/>
    </bean>
    <!--定义json格式处理器-->
    <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json"/>
        <property name="defaultCharset" value="UTF-8"/>
        <property name="features">
            <list>
                <value>WriteDateUseDateFormat</value>
            </list>
        </property>
    </bean>
    <!--配置拦截器-->
    <mvc:interceptors>
        <!--配置session校验拦截器-->
        <mvc:interceptor>
            <!--指定拦截请求-->
            <mvc:mapping path="/**"/>
            <!--指定不拦截请求-->
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/user/logout"/>
            <mvc:exclude-mapping path="/static/**"/>
            <!--指点自定义拦截器-->
            <bean class="com.smbms.interceptor.SysInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
